<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DataSource Configuration -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
		<!-- 初始化连接大小 -->
        <property name="initialSize" value="30"/>
        <property name="maxTotal" value="30"/>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="30"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="30"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWaitMillis" value="3000"/>

        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>

        <property name="timeBetweenEvictionRunsMillis" value="30000"/>
        <property name="numTestsPerEvictionRun" value="6"/>
        <property name="minEvictableIdleTimeMillis" value="-1"/>
        <property name="validationQuery" value="SELECT 1"/>

        <!-- use cache or not for preparedStatement-->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxOpenPreparedStatements" value="50"/>
    </bean>
	
	
	<!-- 注解扫描包 -->
    <context:component-scan base-package="com.eilikce.osm.dao" />

    <!-- SqlsessionFactory setup for MyBatis Database Layer -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据源 -->
       <property name="dataSource" ref="dataSource" />
       <!-- mybatis 基础配置 -->
        <property name="configLocation" value="classpath:/mybatis-config.xml"/>
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>
    
	<!-- DAO接口所在包名，Spring会自动查找其下的类 
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.eilikce.osm.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	-->
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
    </bean>
	
	<!-- Transaction manager for a single JDBC DataSource -->
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <!-- <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="select*" read-only="true" />
            <tx:method name="read*" read-only="true" />
            <tx:method name="get*" read-only="true" />
            <tx:method name="view*"/>
            <tx:method name="list*"/>
            <tx:method name="add*"/>
            <tx:method name="create*"/>
            <tx:method name="delete*"/>
            <tx:method name="update*"/>
        </tx:attributes>
    </tx:advice> -->
    
</beans>