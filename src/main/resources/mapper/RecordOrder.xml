<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.eilikce.osm.dao.RecordOrderDaoImpl">

	<!-- 订单全量 结果集 -->
	<resultMap id="recordOrderFurther" type="RecordOrderFurther" >
		<id column="o_id" property="id" /> <!-- 问题，集合映射 -->
		<result column="o_order_id" property="orderId" /> 
		<result column="total_cost" property="totalCost" />
		<result column="total_price" property="totalPrice" />
		<result column="total_profit" property="totalProfit" />
		<result column="consumer_addr" property="consumerAddr" />
		<result column="consumer_name" property="consumerName" />
		<result column="consumer_phone" property="consumerPhone" />
		<result column="consumer_id" property="consumerId" />
		<result column="payment_status" property="paymentStatus" />
		<result column="order_invalid" property="orderInvalid" />
		<result column="order_cancel_detail" property="orderCancelDetail" />
		<result column="order_date" property="orderDate" />
		<collection property="recordOrderCommodityList" ofType="RecordOrderCommodity">
			<id column="c_id" property="id" />
			<result column="order_commodity_id" property="orderCommodityId" />
			<result column="c_order_id" property="orderId" />
			<result column="commodity_id" property="commodityId" />
			<result column="commodity_name" property="commodityName" />
			<result column="commodity_detail" property="commodityDetail" />
			<result column="barcode" property="barcode" />
			<result column="group_name" property="groupName" />
			<result column="item_name" property="itemName" />
			<result column="unit" property="unit" />
			<result column="original" property="original" />
			<result column="price" property="price" />
			<result column="profit" property="profit" />
			<result column="sales_volume" property="salesVolume" />
			<result column="sales_date" property="salesDate" />
		</collection>
	</resultMap>

    <select id="selectCount" resultType="int">
        SELECT count(*) FROM Record_Order
    </select>
    
    <select id="selectAllRecordOrderFurther" resultMap="recordOrderFurther">
    	SELECT o.id AS o_id , o.order_id AS o_order_id ,  o.total_cost , o.total_price , 
    	o.total_profit , o.consumer_addr , o.consumer_name , o.consumer_phone , 
    	o.consumer_id  , o.payment_status , o.order_invalid , o.order_cancel_detail , o.order_date ,
    	c.id AS c_id , c.order_commodity_id , c.order_id AS c_order_id , c.commodity_id , 
    	c.commodity_name , c.commodity_detail , c.barcode , c.group_name , 
    	c.item_name , c.unit , c.original , c.price , 
    	c.profit , c.sales_volume , c.sales_date
    	FROM RECORD_ORDER AS o RIGHT JOIN RECORD_ORDER_COMMODITY AS c
    	ON o.order_id = c.order_id
    </select>

    <select id="selectRecordOrderFurtherByPage" resultMap="recordOrderFurther" parameterType="map">
    	SELECT o.id AS o_id , o.order_id AS o_order_id ,  o.total_cost , o.total_price , 
    	o.total_profit , o.consumer_addr , o.consumer_name , o.consumer_phone , 
    	o.consumer_id , o.payment_status , o.order_invalid , o.order_cancel_detail , o.order_date ,
    	c.id AS c_id , c.order_commodity_id , c.order_id AS c_order_id , c.commodity_id , 
    	c.commodity_name , c.commodity_detail , c.barcode , c.group_name , 
    	c.item_name , c.unit , c.original , c.price , 
    	c.profit , c.sales_volume , c.sales_date
    	FROM 
    	(SELECT tmp.id , tmp.order_id , tmp.total_cost , tmp.total_price , 
    	tmp.total_profit , tmp.consumer_addr , tmp.consumer_name , tmp.consumer_phone , 
    	tmp.consumer_id , tmp.payment_status , tmp.order_invalid , tmp.order_cancel_detail , tmp.order_date
    	FROM RECORD_ORDER AS tmp LIMIT #{step},#{pageSize} ) AS o
    	LEFT JOIN 
    	RECORD_ORDER_COMMODITY AS c
    	ON o.order_id = c.order_id
    </select>
    
    <select id="selectCountByPage" resultType="int" parameterType="map">
        SELECT count(*) FROM (
	        SELECT o.id AS o_id , o.order_id AS o_order_id ,  o.total_cost , o.total_price , 
	    	o.total_profit , o.consumer_addr , o.consumer_name , o.consumer_phone , 
	    	o.consumer_id , o.payment_status ,  o.order_invalid , o.order_cancel_detail , o.order_date ,
	    	c.id AS c_id , c.order_commodity_id , c.order_id AS c_order_id , c.commodity_id , 
	    	c.commodity_name , c.commodity_detail , c.barcode , c.group_name , 
	    	c.item_name , c.unit , c.original , c.price , 
	    	c.profit , c.sales_volume , c.sales_date
	    	FROM 
	    	(SELECT tmp.id , tmp.order_id , tmp.total_cost , tmp.total_price , 
	    	tmp.total_profit , tmp.consumer_addr , tmp.consumer_name , tmp.consumer_phone , 
	    	tmp.consumer_id , tmp.payment_status, tmp.order_invalid , tmp.order_cancel_detail , tmp.order_date
	    	FROM RECORD_ORDER AS tmp LIMIT #{step},#{pageSize} ) AS o
	    	LEFT JOIN 
	    	RECORD_ORDER_COMMODITY AS c
	    	ON o.order_id = c.order_id
        ) as n
    </select>
    
    <!-- 添加一个订单 -->
    <insert id="insertRecordOrder" parameterType="RecordOrder" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO RECORD_ORDER
        (order_id,total_cost,total_price,total_profit,consumer_addr,consumer_name,consumer_phone,consumer_id,payment_status,order_invalid,order_cancel_detail,order_date) 
        VALUES 
        ( #{orderId}, #{totalCost}, #{totalPrice}, #{totalProfit}, #{consumerAddr}, #{consumerName}, #{consumerPhone}, #{consumerId}, #{paymentStatus}, #{orderInvalid}, #{orderCancelDetail}, now()) 
    </insert>
    
    <!-- 更新支付状态 -->
    <update id="updatePaymentStatus" parameterType="RecordOrder">
        UPDATE RECORD_ORDER
        SET	payment_status = #{paymentStatus}
        WHERE order_id = #{orderId}
    </update>

    <!-- 更新支付状态，根据订单号 -->
    <update id="updatePaymentStatusById" parameterType="map">
        UPDATE RECORD_ORDER
        SET	payment_status = #{paymentStatus}
        WHERE order_id = #{orderId}
    </update>

</mapper>
